GetItems:
  tracing: true
  handler: src/lambda/http/item/getItems.main
  events:
    - http:
        method: get
        path: items
        cors: true
        authorizer: Auth
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEM_TABLE}'

CreateItem:
  tracing: true
  handler: src/lambda/http/item/createItem.main
  events:
    - http:
        method: post
        path: items
        cors: true
        authorizer: Auth
        request:
          schemas:
            application/json: ${file(./schemas/item/create-item-model.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEM_TABLE}'

UpdateItem:
  tracing: true
  handler: src/lambda/http/item/updateItem.main
  events:
    - http:
        method: patch
        path: items/{itemId}
        cors: true
        authorizer: Auth
        request:
          schemas:
            application/json: ${file(./schemas/item/update-item-model.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEM_TABLE}'

DeleteItem:
  tracing: true
  handler: src/lambda/http/item/deleteItem.main
  events:
    - http:
        method: delete
        path: items/{itemId}
        cors: true
        authorizer: Auth
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ITEM_TABLE}'

GetItemCollections:
  tracing: true
  handler: src/lambda/http/item/getItemCollections.main
  events:
    - http:
        method: get
        path: items/{itemId}/collections
        cors: true
        authorizer: Auth
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COLLECTION_ITEM_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COLLECTION_ITEM_TABLE}/index/${self:provider.environment.COLLECTION_ITEM_INDEX}'
    - Effect: Allow
      Action:
        - dynamodb:BatchGetItem
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COLLECTION_TABLE}'

UpdateItemCollections:
  tracing: true
  handler: src/lambda/http/item/updateItemCollections.main
  events:
    - http:
        method: post
        path: items/{itemId}/collections
        cors: true
        authorizer: Auth
        request:
          schemas:
            application/json: ${file(./schemas/update-collection-items-model.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:BatchWriteItem
        - xray:PutTelemetryRecords
        - xray:PutTraceSegments
      Resource:
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COLLECTION_ITEM_TABLE}'
        - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COLLECTION_ITEM_TABLE}/index/${self:provider.environment.COLLECTION_ITEM_INDEX}'